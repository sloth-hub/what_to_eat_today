{"version":3,"sources":["components/Weather.js","components/Footer.js","pages/Home.js","components/KakaoShareBtn.js","components/FacebookHelmet.js","pages/Result.js","components/Food.js","components/Mood.js","pages/Ask.js","index.js"],"names":["weatherOptions","Haze","iconName","title","Thunderstorm","Drizzle","Rain","Snow","Clear","Clouds","Mist","Dust","Tornado","Weather","temp","condition","className","Math","round","src","alt","Footer","href","target","rel","Home","useState","isLoading","city","state","setState","loadedCoords","localStorage","getItem","GetWeather","lat","lng","a","axios","get","process","data","main","weather","name","useEffect","window","navigator","geolocation","getCurrentPosition","position","coordsObj","latitude","coords","longitude","setItem","JSON","stringify","location","reload","alert","parseCoords","parse","to","pathname","KakaoShareBtn","Kakao","init","id","onClick","isInitialized","Link","sendCustom","templateId","templateArgs","currentFood","document","querySelector","getAttribute","FacebookHelmet","img","Helmet","property","content","Result","loading","setLoading","result","setResult","foodName","setFoodName","foodImgUrl","setFoodImgUrl","slideIndex","getFood","foods","showFood","foodTemp","resultList","filter","v","includes","mood","taste","sort","random","showSlides","n","item","querySelectorAll","length","forEach","style","display","classList","remove","add","innerText","setAttribute","Image","map","f","index","key","replace","open","encodeURIComponent","dsc","twitterShare","Food","toggle","setToggle","setTaste","handleFoodChange","evt","value","isGetFood","type","onChange","htmlFor","role","aria-label","isGetMood","Mood","setMood","handleMoodChange","Ask","props","undefined","App","path","exact","component","rootElement","getElementById","ReactDOM","render","Fragment","async","defer","crossorigin","nonce"],"mappings":"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","file":"static/js/main.1e35403b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst weatherOptions = {\r\n    Haze: {\r\n        iconName: \"./images/009-cloudy.png\",\r\n        title: \"Haze\"\r\n    },\r\n    Thunderstorm: {\r\n        iconName: \"./images/013-thunder.png\",\r\n        title: \"Thunderstrom\"\r\n    },\r\n    Drizzle: {\r\n        iconName: \"./images/021-rain.png\",\r\n        title: \"Drizzle\"\r\n    },\r\n    Rain: {\r\n        iconName: \"./images/002-rainy.png\",\r\n        title: \"Rain\"\r\n    },\r\n    Snow: {\r\n        iconName: \"./images/025-snow.png\",\r\n        title: \"Snow\"\r\n    },\r\n    Clear: {\r\n        iconName: \"./images/005-sun.png\",\r\n        title: \"Clear\"\r\n    },\r\n    Clouds: {\r\n        iconName: \"./images/001-cloud.png\",\r\n        title: \"Clouds\"\r\n    },\r\n    Mist: {\r\n        iconName: \"./images/016-mist.png\",\r\n        title: \"Mist\"\r\n    },\r\n    Dust: {\r\n        iconName: \"./images/012-windy.png\",\r\n        title: \"Dust\"\r\n    },\r\n    Tornado: {\r\n        iconName: \"./images/015-tornado.png\",\r\n        title: \"Tornado\"\r\n    }\r\n}\r\nconst Weather = ({ temp, condition }) => {\r\n\r\n    return (\r\n        <div className=\"weatherbox\">\r\n            <p className=\"weatherTemp\">{Math.round(temp)}˚C</p>\r\n            <img src={weatherOptions[condition].iconName} className=\"weatherIcon\" alt={condition} />\r\n        </div>\r\n    );\r\n}\r\n\r\nWeather.propTypes = {\r\n    condition: PropTypes.string.isRequired,\r\n    city: PropTypes.string.isRequired,\r\n} \r\n\r\nexport default Weather;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>Chae Hyerin &copy; <a href=\"https://github.com/sloth-hub/whattoeattoday\" target=\"_blank\" rel=\"noopener noreferrer\">github</a></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Weather from \"../components/Weather\";\r\nimport Footer from \"../components/Footer\";\r\nimport \"./Home.css\";\r\n\r\nconst Home = () => {\r\n\r\n    const [state, setState] = useState({\r\n        isLoading: true,\r\n        condition: '',\r\n        temp: '',\r\n        city: ''\r\n    });\r\n    const loadedCoords = localStorage.getItem(\"cords\");\r\n\r\n    const GetWeather = async (lat, lng) => {\r\n        const {\r\n            data: {\r\n                main: { temp },\r\n                weather,\r\n                name\r\n            }\r\n        } = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${process.env.REACT_APP_WEATHER_KEY}&units=metric`);\r\n        setState({\r\n            isLoading: false,\r\n            condition: weather[0].main,\r\n            temp,\r\n            city: name\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (loadedCoords === null) {\r\n            if (window.navigator.geolocation) { // GPS를 지원하면\r\n                window.navigator.geolocation.getCurrentPosition((position) => {\r\n                    const latitude = position.coords.latitude;\r\n                    const longitude = position.coords.longitude;\r\n                    const coordsObj = {\r\n                        latitude,\r\n                        longitude\r\n                    };\r\n                    localStorage.setItem(\"cords\", JSON.stringify(coordsObj));\r\n                    window.location.reload();\r\n                });\r\n            } else {\r\n                alert(\"GPS를 지원하지 않습니다.\");\r\n            }\r\n        } else {\r\n            const parseCoords = JSON.parse(loadedCoords);\r\n            GetWeather(parseCoords.latitude, parseCoords.longitude);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {loadedCoords === null ?\r\n                // null이면\r\n                <div className=\"loader\">\r\n                    <h2>위치확인 허용을 눌러주세요.</h2>\r\n                </div>\r\n                : // null이 아니면\r\n                <Fade>\r\n                    <div className=\"home_container\">\r\n                        <section className=\"home_title\">\r\n                            <h1>WHAT TO EAT TODAY?</h1>\r\n                            <h2>오늘 뭐 먹지?</h2>\r\n                            {/* <img src={logoImage} className=\"home_logo\" alt=\"WHAT TO EAT TODAT? 오늘 뭐먹지?\"/> */}\r\n                        </section>\r\n                        <section className=\"home_weather\">\r\n                            {state.isLoading ?\r\n                                <p className=\"home_loading\">loading..</p> :\r\n                                <Fade>\r\n                                    <Weather\r\n                                        temp={state.temp}\r\n                                        condition={state.condition}\r\n                                        city={state.city} />\r\n                                </Fade>\r\n                            }\r\n                        </section>\r\n                        <section className=\"home_start\">\r\n                            <Link to={{\r\n                                pathname: \"/ask\",\r\n                                state: {\r\n                                    temp: state.temp,\r\n                                    condition: state.condition\r\n                                }\r\n                            }}>\r\n                                <button className=\"btn\">START</button>\r\n                            </Link>\r\n                        </section>\r\n                    </div>\r\n                </Fade>\r\n            }\r\n            <Footer />\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from \"react\";\r\n\r\nconst KakaoShareBtn = () => {\r\n\r\n    useEffect(() => {\r\n        window.Kakao.init(process.env.REACT_APP_KAKAO_KEY);\r\n    }, []);\r\n\r\n    const createKakaoButton = () => {\r\n\r\n        if (window.Kakao.isInitialized()) {\r\n\r\n            window.Kakao.Link.sendCustom({\r\n                templateId: 39266,\r\n                templateArgs: {\r\n                    currentFood: document.querySelector(\"meta[property='og\\\\:image']\").getAttribute(\"content\")\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <button id=\"kakao-link-btn\" className=\"sns_btn\" onClick={()=> createKakaoButton()}>\r\n            <img src=\"//dev.kakao.com/assets/img/about/logos/kakaolink/kakaolink_btn_small.png\" alt=\"kakao-share-icon\" />\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default KakaoShareBtn;","import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst FacebookHelmet = ({img}) => {\r\n\r\n    return (\r\n        <Helmet>\r\n            <meta property=\"og:type\" content=\"website\" />\r\n            <meta property=\"og:title\" content=\"WHAT TO EAT TODAY?\" />\r\n            <meta property=\"og:url\" content=\"https://sloth-hub.github.io/whattoeattoday/\" />\r\n            <meta property=\"og:description\" content='\"오늘 뭐 먹지?\" 하고 고민하셨죠? 이 메뉴 어때요?' />\r\n            <meta property=\"og:image\" content={img} />\r\n        </Helmet>\r\n    );\r\n\r\n}\r\n\r\nexport default FacebookHelmet;","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport KakaoShareBtn from \"../components/KakaoShareBtn\";\r\nimport FacebookHelmet from \"../components/FacebookHelmet\";\r\n\r\nconst Result = ({ state }) => {\r\n\r\n    const [loading, setLoading] = useState({\r\n        isLoading: true\r\n    }), [result, setResult] = useState('')\r\n        , [foodName, setFoodName] = useState('')\r\n        ,[foodImgUrl, setFoodImgUrl] = useState('');\r\n\r\n    let slideIndex = 1;\r\n\r\n    useEffect(() => {\r\n        getFood();\r\n    }, []);\r\n\r\n    const getFood = async () => {\r\n        const {\r\n            data: {\r\n                foods\r\n            }\r\n        } = await axios.get(\"https://whattoeattoday-5c793.firebaseio.com/.json\");\r\n        showFood(foods);\r\n    },\r\n        showFood = (foods) => {\r\n\r\n            let foodTemp;\r\n            if (state.temp < 10) { // 10도 미만이면\r\n                foodTemp = \"cold\";\r\n            } else if (state.temp >= 10 && state.temp < 24) { // 10도 이하거나 24도 미만이면\r\n                foodTemp = \"normal\";\r\n            } else { // 25도 이상이면\r\n                foodTemp = \"hot\";\r\n            }\r\n\r\n            let foodList = foods.filter(v => {\r\n                return v.weather.includes(state.condition) && v.mood.includes(state.mood) && v.taste === state.taste && v.temp.includes(foodTemp)\r\n            });\r\n\r\n            let resultList = foodList.sort(()=> {\r\n                return .5 - Math.random();\r\n            });\r\n\r\n            setResult(resultList);\r\n            setLoading({ isLoading: false });\r\n            setFoodName(resultList[0].name);\r\n            setFoodImgUrl(resultList[0].img);\r\n        },\r\n        nextSlides = (n) => {\r\n            showSlides(slideIndex += n);\r\n        },\r\n        showSlides = (n) => {\r\n            const item = document.querySelectorAll(\".list_item\");\r\n            if (n > item.length) {\r\n                slideIndex = 1;\r\n            } \r\n            if (n < 1) {\r\n                slideIndex = item.length;\r\n            }\r\n            item.forEach((v) => {\r\n                v.style.display = \"none\";\r\n                v.classList.remove(\"active\");\r\n            });\r\n            item[slideIndex - 1].style.display = \"initial\";\r\n            item[slideIndex - 1].classList.add(\"active\");\r\n\r\n            let currentFood = document.querySelector(\"img.active\");\r\n            document.querySelector(\"span.foodName\").innerText = currentFood.alt;\r\n            document.querySelector(\"meta[property='og\\\\:image']\").setAttribute(\"content\", currentFood.src);\r\n        },\r\n        facebookShare = () => {\r\n            window.open(`https://www.facebook.com/sharer.php?u=${encodeURIComponent(window.location.href)}`);\r\n        },\r\n        twitterShare = () => {\r\n            let dsc = document.querySelector(\"meta[property='og\\\\:description']\").getAttribute(\"content\");\r\n            window.open(`https://twitter.com/intent/tweet?text=${encodeURIComponent(dsc)}&url=${encodeURIComponent(window.location.href)}`);\r\n        },\r\n        Image = ({ length, img, name }) => {\r\n            return (\r\n                <Fade>\r\n                    <img src={img} alt={name} className={length === 0 ? \"list_item active\" : \"list_item\"} />\r\n                </Fade>\r\n            )\r\n        }\r\n\r\n    return (\r\n        <div className=\"result_container\">\r\n            <Fade>\r\n                {loading.isLoading ?\r\n                    <img src=\"./images/loading.gif\" alt=\"loading...\" className=\"result_loading\" /> :\r\n                    <div className=\"result_wrap\">\r\n                        <div className=\"result_list\">\r\n                            {result.map((f, index) => {\r\n                                return <Image key={index} length={index} name={f.name} img={f.img} />\r\n                            })}\r\n                        </div>\r\n                        <h1 className=\"result_title\"><span className=\"foodName\">{foodName}</span> 어떠세요?</h1>\r\n                        <div className=\"result_btn\">\r\n                            <button className=\"nextBtn btn\" onClick={() => nextSlides(1)}>다른거!</button>\r\n                            <button className=\"homeBtn btn\" onClick={()=> {window.location.replace(\"https://sloth-hub.github.io/whattoeattoday/\")}}>홈으로</button>\r\n                        </div>\r\n                        <div className=\"result_share\">\r\n                            <KakaoShareBtn />\r\n                            <button id=\"facebook-link-icon\" className=\"sns_btn fb-share-button\" onClick={()=> facebookShare()}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/facebook-icon.png\"} alt=\"facebook-share-icon\" />\r\n                            </button>\r\n                            <FacebookHelmet img={foodImgUrl}/>\r\n                            <button id=\"twitter-link-icon\" className=\"sns_btn\" onClick={()=> twitterShare()}>\r\n                                <img src={process.env.PUBLIC_URL + \"/images/twitter-icon.png\"} alt=\"facebook-share-icon\" />\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </Fade>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Result;","import React, { useState } from \"react\";\r\nimport Result from \"../pages/Result\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst Food = ({ state, toggle, setToggle }) => {\r\n\r\n    const [taste, setTaste] = useState('');\r\n\r\n    const handleFoodChange = (evt) => {\r\n        setTaste(evt.target.value);\r\n    }\r\n    const handleFoodClick = () => {\r\n        if (taste === \"\") {\r\n            alert(\"땡기는 맛을 선택해주세요.\");\r\n        } else {\r\n            state.taste = taste;\r\n            setToggle({ isGetMood: true, isGetFood: true });\r\n        }\r\n    }\r\n    if (toggle.isGetFood) {\r\n        return <Result state={state} />;\r\n    }\r\n    return (\r\n        <div className=\"food_container\">\r\n            <Fade>\r\n                <div className=\"food_box\">\r\n                    <h1 className=\"food_ask\">지금 어떤 맛이 땡기나요?</h1>\r\n                    <div className=\"foods\">\r\n                        <div className=\"radiobox\">\r\n                            <input type=\"radio\" name=\"taste\" value=\"spicy\" id=\"spicy\" onChange={handleFoodChange} />\r\n                            <label htmlFor=\"spicy\"><span className=\"text\">매운거<span role=\"img\" aria-label=\"spicy\">🌶</span></span></label>\r\n                        </div>\r\n                        <div className=\"radiobox\">\r\n                            <input type=\"radio\" name=\"taste\" value=\"oily\" id=\"oily\" onChange={handleFoodChange} />\r\n                            <label htmlFor=\"oily\"><span className=\"text\">기름진거<span role=\"img\" aria-label=\"oily\">🍗</span></span></label>\r\n                        </div>\r\n                        <div className=\"radiobox\">\r\n                            <input type=\"radio\" name=\"taste\" value=\"light\" id=\"light\" onChange={handleFoodChange} />\r\n                            <label htmlFor=\"light\"><span className=\"text\">담백한거<span role=\"img\" aria-label=\"light\">🥪</span></span></label>\r\n                        </div>\r\n                        <div className=\"radiobox\">\r\n                            <input type=\"radio\" name=\"taste\" value=\"soup\" id=\"soup\" onChange={handleFoodChange} />\r\n                            <label htmlFor=\"soup\"><span className=\"text\">호로록 국물있는거<span role=\"img\" aria-label=\"soup\">🥣</span></span></label>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"food_next btn\" onClick={handleFoodClick}>NEXT</button>\r\n                </div>\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Food;","import React, { useState } from \"react\";\r\nimport Food from \"../components/Food\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst Mood = ({ state }) => {\r\n\r\n    const [toggle, setToggle] = useState('');\r\n    const [mood, setMood] = useState('');\r\n\r\n    const handleMoodChange = (evt) => {\r\n        setMood(evt.target.value);\r\n    }\r\n\r\n    const handleMoodClick = () => {\r\n        if (mood === \"\") {\r\n            alert(\"기분을 선택해주세요.\");\r\n        } else {\r\n            state.mood = mood;\r\n            setToggle({ isGetMood: true, isGetFood: false });\r\n        }\r\n    }\r\n\r\n    if (toggle.isGetMood) {\r\n        return <Food state={state} toggle={toggle} setToggle={setToggle} />;\r\n    }\r\n    return (\r\n        <div className=\"mood_container\">\r\n            <Fade>\r\n                <div className=\"mood_box\">\r\n                    <h1 className=\"mood_ask\">당신의 오늘 기분은 어떤가요?</h1>\r\n                    <div className=\"moods\">\r\n                        <label htmlFor=\"good\">\r\n                            <input type=\"radio\" name=\"mood\" className=\"good\" id=\"good\" value=\"good\" onChange={handleMoodChange} />\r\n                            <img src={process.env.PUBLIC_URL + \"/images/001-icon-569501_select.png\"} alt=\"good\" />\r\n                        </label>\r\n                        <label htmlFor=\"happy\">\r\n                            <input type=\"radio\" name=\"mood\" className=\"happy\" id=\"happy\" value=\"happy\" onChange={handleMoodChange} />\r\n                            <img src={process.env.PUBLIC_URL + \"/images/002-icon-569531_select.png\"} alt=\"happy\" />\r\n                        </label>\r\n                        <label htmlFor=\"melancholy\">\r\n                            <input type=\"radio\" name=\"mood\" className=\"melancholy\" id=\"melancholy\" value=\"melancholy\" onChange={handleMoodChange} />\r\n                            <img src={process.env.PUBLIC_URL + \"/images/003-icon-569513_select.png\"} alt=\"melancholy\" />\r\n                        </label>\r\n                        <label htmlFor=\"sad\">\r\n                            <input type=\"radio\" name=\"mood\" className=\"sad\" id=\"sad\" value=\"sad\" onChange={handleMoodChange} />\r\n                            <img src={process.env.PUBLIC_URL + \"/images/004-icon-569569_select.png\"} alt=\"sad\" />\r\n                        </label>\r\n                        <label htmlFor=\"angry\">\r\n                            <input type=\"radio\" name=\"mood\" className=\"angry\" id=\"angry\" value=\"angry\" onChange={handleMoodChange} />\r\n                            <img src={process.env.PUBLIC_URL + \"/images/005-icon-569518_select.png\"} alt=\"angry\" />\r\n                        </label>\r\n                    </div>\r\n                    <button className=\"mood_next btn\" onClick={handleMoodClick}>NEXT</button>\r\n                </div>\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mood;","import React from \"react\";\r\nimport Mood from \"../components/Mood\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst Ask = (props) => {\r\n\r\n    if (props.location.state === undefined) {\r\n        window.location.replace(\"https://sloth-hub.github.io/whattoeattoday/\"); // state가 존재하지 않으면\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <Mood \r\n            state={props.location.state}\r\n            />\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ask;","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { HashRouter, Route } from 'react-router-dom';\nimport ReactDOM from \"react-dom\";\nimport Home from \"./pages/Home\";\nimport Ask from \"./pages/Ask\";\nimport \"./reset.css\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Route path=\"/\" exact={true} component={Home}/>\n      <Route path=\"/ask\" component={Ask}/>\n    </HashRouter>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.Fragment>\n    <App />\n    <Helmet>\n    <script src=\"https://developers.kakao.com/sdk/js/kakao.js\"></script>\n    <script async defer crossorigin=\"anonymous\" src=\"https://connect.facebook.net/ko_KR/sdk.js#xfbml=1&version=v8.0\" nonce=\"k6exFkce\"></script>\n    </Helmet>\n  </React.Fragment>,\n  rootElement\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Weather.js","components/Footer.js","pages/Home.js","components/KakaoShareBtn.js","pages/Result.js","components/Food.js","components/Mood.js","pages/Ask.js","index.js"],"names":["weatherOptions","Haze","iconName","title","Thunderstorm","Drizzle","Rain","Snow","Clear","Clouds","Mist","Dust","Tornado","Weather","temp","condition","className","Math","round","src","alt","Footer","href","target","rel","Home","useState","isLoading","city","state","setState","loadedCoords","localStorage","getItem","GetWeather","lat","lng","a","axios","get","data","main","weather","name","useEffect","window","navigator","geolocation","getCurrentPosition","position","coordsObj","latitude","coords","longitude","setItem","JSON","stringify","location","reload","alert","parseCoords","parse","to","pathname","KakaoShareBtn","id","onClick","Kakao","init","isInitialized","Link","createDefaultButton","container","objectType","content","description","imageUrl","link","mobileWebUrl","webUrl","buttons","Result","loading","setLoading","result","setResult","foodName","setFoodName","slideIndex","getFood","foods","showFood","foodTemp","resultList","filter","v","includes","mood","taste","showSlides","n","list","document","querySelector","item","children","length","i","style","display","classList","remove","add","currentFood","getAttribute","innerText","img","map","f","index","key","Food","toggle","setToggle","setTaste","handleFoodChange","evt","value","isGetFood","type","onChange","htmlFor","role","aria-label","isGetMood","Mood","setMood","handleMoodChange","process","Ask","props","undefined","replace","App","path","exact","component","rootElement","getElementById","ReactDOM","render","Fragment","Helmet"],"mappings":"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","file":"static/js/main.877a56a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst weatherOptions = {\r\n    Haze: {\r\n        iconName: \"./images/009-cloudy.png\",\r\n        title: \"Haze\"\r\n    },\r\n    Thunderstorm: {\r\n        iconName: \"./images/013-thunder.png\",\r\n        title: \"Thunderstrom\"\r\n    },\r\n    Drizzle: {\r\n        iconName: \"./images/021-rain.png\",\r\n        title: \"Drizzle\"\r\n    },\r\n    Rain: {\r\n        iconName: \"./images/002-rainy.png\",\r\n        title: \"Rain\"\r\n    },\r\n    Snow: {\r\n        iconName: \"./images/025-snow.png\",\r\n        title: \"Snow\"\r\n    },\r\n    Clear: {\r\n        iconName: \"./images/005-sun.png\",\r\n        title: \"Clear\"\r\n    },\r\n    Clouds: {\r\n        iconName: \"./images/001-cloud.png\",\r\n        title: \"Clouds\"\r\n    },\r\n    Mist: {\r\n        iconName: \"./images/016-mist.png\",\r\n        title: \"Mist\"\r\n    },\r\n    Dust: {\r\n        iconName: \"./images/012-windy.png\",\r\n        title: \"Dust\"\r\n    },\r\n    Tornado: {\r\n        iconName: \"./images/015-tornado.png\",\r\n        title: \"Tornado\"\r\n    }\r\n}\r\nconst Weather = ({ temp, condition }) => {\r\n\r\n    return (\r\n        <div className=\"weatherbox\">\r\n            <p className=\"weatherTemp\">{Math.round(temp)}˚C</p>\r\n            <img src={weatherOptions[condition].iconName} className=\"weatherIcon\" alt={condition} />\r\n        </div>\r\n    );\r\n}\r\n\r\nWeather.propTypes = {\r\n    condition: PropTypes.string.isRequired,\r\n    city: PropTypes.string.isRequired,\r\n} \r\n\r\nexport default Weather;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>Chae Hyerin &copy; <a href=\"https://github.com/sloth-hub/whattoeattoday\" target=\"_blank\" rel=\"noopener noreferrer\">github</a></p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Weather from \"../components/Weather\";\r\nimport Footer from \"../components/Footer\";\r\nimport \"./Home.css\";\r\n\r\nconst API_KEY = \"80e4e2378e235fae347d6f18a4538af9\";\r\n// const API_KEY = process.env.REACT_APP_WEATHER_KEY;\r\n\r\nconst Home = () => {\r\n\r\n    const [state, setState] = useState({\r\n        isLoading: true,\r\n        condition: '',\r\n        temp: '',\r\n        city: ''\r\n    });\r\n    const loadedCoords = localStorage.getItem(\"cords\");\r\n\r\n    const GetWeather = async (lat, lng) => {\r\n        const {\r\n            data: {\r\n                main: { temp },\r\n                weather,\r\n                name\r\n            }\r\n        } = await axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lng}&appid=${API_KEY}&units=metric`);\r\n        setState({\r\n            isLoading: false,\r\n            condition: weather[0].main,\r\n            temp,\r\n            city: name\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (loadedCoords === null) {\r\n            if (window.navigator.geolocation) { // GPS를 지원하면\r\n                window.navigator.geolocation.getCurrentPosition((position) => {\r\n                    const latitude = position.coords.latitude;\r\n                    const longitude = position.coords.longitude;\r\n                    const coordsObj = {\r\n                        latitude,\r\n                        longitude\r\n                    };\r\n                    localStorage.setItem(\"cords\", JSON.stringify(coordsObj));\r\n                    window.location.reload();\r\n                });\r\n            } else {\r\n                alert(\"GPS를 지원하지 않습니다.\");\r\n            }\r\n        } else {\r\n            const parseCoords = JSON.parse(loadedCoords);\r\n            GetWeather(parseCoords.latitude, parseCoords.longitude);\r\n        }\r\n\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            {loadedCoords === null ?\r\n                // null이면\r\n                <div className=\"loader\">\r\n                    <h2>위치확인 허용을 눌러주세요.</h2>\r\n                </div>\r\n                : // null이 아니면\r\n                <Fade>\r\n                    <div className=\"home_container\">\r\n                        <section className=\"home_title\">\r\n                            <h1>WHAT TO EAT TODAY?</h1>\r\n                            <h2>오늘 뭐 먹지?</h2>\r\n                            {/* <img src={logoImage} className=\"home_logo\" alt=\"WHAT TO EAT TODAT? 오늘 뭐먹지?\"/> */}\r\n                        </section>\r\n                        <section className=\"home_weather\">\r\n                            {state.isLoading ?\r\n                                <p className=\"home_loading\">loading..</p> :\r\n                                <Fade>\r\n                                    <Weather\r\n                                        temp={state.temp}\r\n                                        condition={state.condition}\r\n                                        city={state.city} />\r\n                                </Fade>\r\n                            }\r\n                        </section>\r\n                        <section className=\"home_start\">\r\n                            <Link to={{\r\n                                pathname: \"/ask\",\r\n                                state: {\r\n                                    temp: state.temp,\r\n                                    condition: state.condition\r\n                                }\r\n                            }}>\r\n                                <button className=\"btn\">START</button>\r\n                            </Link>\r\n                        </section>\r\n                    </div>\r\n                </Fade>\r\n            }\r\n            <Footer />\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from \"react\";\r\n\r\nconst KakaoShareBtn = () => {\r\n\r\n    const createKakaoButton = () => {\r\n\r\n        window.Kakao.init(\"3e3386155ff10f2ce4483d3a453c928e\");\r\n        \r\n        if (window.Kakao.isInitialized()) {\r\n            window.Kakao.Link.createDefaultButton({\r\n                container: '#kakao-link-btn',\r\n                objectType: 'feed',\r\n                content: {\r\n                    title: '오늘 뭐 먹지?',\r\n                    description: '\"오늘 뭐 먹지?\" 하고 고민하셨죠? 이 메뉴 어때요?',\r\n                    imageUrl:\r\n                        'https://cdn.pixabay.com/photo/2018/06/04/13/36/ribs-3453216_960_720.jpg',\r\n                    link: {\r\n                        mobileWebUrl: 'https://sloth-hub.github.io/whattoeattoday/',\r\n                        webUrl: 'https://sloth-hub.github.io/whattoeattoday/',\r\n                    },\r\n                },\r\n                buttons: [\r\n                    {\r\n                        title: '다른 메뉴 보기',\r\n                        link: {\r\n                            mobileWebUrl: \"https://sloth-hub.github.io/whattoeattoday/\",\r\n                            webUrl: \"https://sloth-hub.github.io/whattoeattoday/f\",\r\n                        },\r\n                    }\r\n                ]\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <button id=\"kakao-link-btn\" onClick={() => createKakaoButton()}>\r\n            <img src=\"//dev.kakao.com/assets/img/about/logos/kakaolink/kakaolink_btn_small.png\" alt=\"kakao-share-icon\" />\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default KakaoShareBtn;","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport KakaoShareBtn from \"../components/KakaoShareBtn\";\r\n\r\nconst Result = ({ state }) => {\r\n\r\n    const [loading, setLoading] = useState({\r\n        isLoading: true\r\n    }), [result, setResult] = useState('')\r\n        , [foodName, setFoodName] = useState('');\r\n\r\n    let slideIndex = 1;\r\n\r\n    useEffect(() => {\r\n        getFood();\r\n    }, []);\r\n\r\n    const getFood = async () => {\r\n        const {\r\n            data: {\r\n                foods\r\n            }\r\n        } = await axios.get(\"https://whattoeattoday-5c793.firebaseio.com/.json\");\r\n        showFood(foods);\r\n    },\r\n        showFood = (foods) => {\r\n\r\n            let foodTemp;\r\n            if (state.temp < 10) { // 10도 미만이면\r\n                foodTemp = \"cold\";\r\n            } else if (state.temp >= 10 && state.temp < 24) { // 10도 이하거나 24도 미만이면\r\n                foodTemp = \"normal\";\r\n            } else { // 25도 이상이면\r\n                foodTemp = \"hot\";\r\n            }\r\n\r\n            let resultList = foods.filter(v => {\r\n                return v.weather.includes(state.condition) && v.mood.includes(state.mood) && v.taste === state.taste && v.temp.includes(foodTemp)\r\n            });\r\n\r\n            setResult(resultList);\r\n            setLoading({ isLoading: false });\r\n            setFoodName(resultList[0].name);\r\n        },\r\n        nextSlides = (n) => {\r\n            showSlides(slideIndex += n);\r\n        },\r\n        showSlides = (n) => {\r\n            const list = document.querySelector(\"div.result_list\");\r\n            const item = list.children;\r\n            if (n > item.length) {\r\n                slideIndex = 1;\r\n            } else if (n < 1) {\r\n                slideIndex = item.length;\r\n            }\r\n            for (let i = 0; i < item.length; i++) {\r\n                item[i].style.display = \"none\";\r\n                item[i].classList.remove(\"active\");\r\n            }\r\n            item[slideIndex - 1].style.display = \"initial\";\r\n            item[slideIndex - 1].classList.add(\"active\");\r\n\r\n            let currentFood = list.querySelector(\".active\").getAttribute(\"alt\");\r\n            document.querySelector(\"span.foodName\").innerText = currentFood;\r\n\r\n        },\r\n        Result = ({ img, name }) => {\r\n            return (\r\n                <Fade>\r\n                    <img src={img} alt={name} className=\"list_item\" />\r\n                </Fade>\r\n            )\r\n        }\r\n\r\n    return (\r\n        <div className=\"result_container\">\r\n            <Fade>\r\n                {loading.isLoading ?\r\n                    <img src=\"./images/loading.gif\" alt=\"loading...\" className=\"result_loading\" /> :\r\n                    <div className=\"result_wrap\">\r\n                        <div className=\"result_list\">\r\n                            {result.map((f, index) => {\r\n                                return <Result key={index} name={f.name} img={f.img} />\r\n                            })}\r\n                        </div>\r\n                        <h1 className=\"result_title\"><span className=\"foodName\">{foodName}</span> 어떠세요?</h1>\r\n                        <div className=\"result_btn\">\r\n                            <button className=\"nextBtn btn\" onClick={() => nextSlides(1)}>다른거!</button>\r\n                            <Link to=\"/\"><button className=\"homeBtn btn\">홈으로</button></Link>\r\n                            <KakaoShareBtn />\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </Fade>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default Result;","import React, { useState } from \"react\";\r\nimport Result from \"../pages/Result\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst Food = ({ state, toggle, setToggle }) => {\r\n\r\n    const [taste, setTaste] = useState('');\r\n\r\n    const handleFoodChange = (evt) => {\r\n        setTaste(evt.target.value);\r\n    }\r\n    const handleFoodClick = () => {\r\n        if (taste === \"\") {\r\n            alert(\"땡기는 맛을 선택해주세요.\");\r\n        } else {\r\n            state.taste = taste;\r\n            setToggle({ isGetMood: true, isGetFood: true });\r\n        }\r\n    }\r\n    if (toggle.isGetFood) {\r\n        return <Result state={state} />;\r\n    }\r\n    return (\r\n        <div className=\"food_container\">\r\n            <Fade>\r\n                <div className=\"food_box\">\r\n                    <h1 className=\"food_ask\">지금 어떤 맛이 땡기나요?</h1>\r\n                    <div className=\"foods\">\r\n                        <div className=\"radiobox\">\r\n                            <input type=\"radio\" name=\"taste\" value=\"spicy\" id=\"spicy\" onChange={handleFoodChange} />\r\n                            <label htmlFor=\"spicy\"><span className=\"text\">매운거<span role=\"img\" aria-label=\"spicy\">🌶</span></span></label>\r\n                        </div>\r\n                        <div className=\"radiobox\">\r\n                            <input type=\"radio\" name=\"taste\" value=\"oily\" id=\"oily\" onChange={handleFoodChange} />\r\n                            <label htmlFor=\"oily\"><span className=\"text\">기름진거<span role=\"img\" aria-label=\"oily\">🍗</span></span></label>\r\n                        </div>\r\n                        <div className=\"radiobox\">\r\n                            <input type=\"radio\" name=\"taste\" value=\"light\" id=\"light\" onChange={handleFoodChange} />\r\n                            <label htmlFor=\"light\"><span className=\"text\">담백한거<span role=\"img\" aria-label=\"light\">🥪</span></span></label>\r\n                        </div>\r\n                        <div className=\"radiobox\">\r\n                            <input type=\"radio\" name=\"taste\" value=\"soup\" id=\"soup\" onChange={handleFoodChange} />\r\n                            <label htmlFor=\"soup\"><span className=\"text\">호로록 국물있는거<span role=\"img\" aria-label=\"soup\">🥣</span></span></label>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"food_next btn\" onClick={handleFoodClick}>NEXT</button>\r\n                </div>\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Food;","import React, { useState } from \"react\";\r\nimport Food from \"../components/Food\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nconst Mood = ({ state }) => {\r\n\r\n    const [toggle, setToggle] = useState('');\r\n    const [mood, setMood] = useState('');\r\n\r\n    const handleMoodChange = (evt) => {\r\n        setMood(evt.target.value);\r\n    }\r\n\r\n    const handleMoodClick = () => {\r\n        if (mood === \"\") {\r\n            alert(\"기분을 선택해주세요.\");\r\n        } else {\r\n            state.mood = mood;\r\n            setToggle({ isGetMood: true, isGetFood: false });\r\n        }\r\n    }\r\n\r\n    if (toggle.isGetMood) {\r\n        return <Food state={state} toggle={toggle} setToggle={setToggle} />;\r\n    }\r\n    return (\r\n        <div className=\"mood_container\">\r\n            <Fade>\r\n                <div className=\"mood_box\">\r\n                    <h1 className=\"mood_ask\">당신의 오늘 기분은 어떤가요?</h1>\r\n                    <div className=\"moods\">\r\n                        <label htmlFor=\"good\">\r\n                            <input type=\"radio\" name=\"mood\" className=\"good\" id=\"good\" value=\"good\" onChange={handleMoodChange} />\r\n                            <img src={process.env.PUBLIC_URL + \"/images/001-icon-569501_select.png\"} alt=\"good\" />\r\n                        </label>\r\n                        <label htmlFor=\"happy\">\r\n                            <input type=\"radio\" name=\"mood\" className=\"happy\" id=\"happy\" value=\"happy\" onChange={handleMoodChange} />\r\n                            <img src={process.env.PUBLIC_URL + \"/images/002-icon-569531_select.png\"} alt=\"happy\" />\r\n                        </label>\r\n                        <label htmlFor=\"melancholy\">\r\n                            <input type=\"radio\" name=\"mood\" className=\"melancholy\" id=\"melancholy\" value=\"melancholy\" onChange={handleMoodChange} />\r\n                            <img src={process.env.PUBLIC_URL + \"/images/003-icon-569513_select.png\"} alt=\"melancholy\" />\r\n                        </label>\r\n                        <label htmlFor=\"sad\">\r\n                            <input type=\"radio\" name=\"mood\" className=\"sad\" id=\"sad\" value=\"sad\" onChange={handleMoodChange} />\r\n                            <img src={process.env.PUBLIC_URL + \"/images/004-icon-569569_select.png\"} alt=\"sad\" />\r\n                        </label>\r\n                        <label htmlFor=\"angry\">\r\n                            <input type=\"radio\" name=\"mood\" className=\"angry\" id=\"angry\" value=\"angry\" onChange={handleMoodChange} />\r\n                            <img src={process.env.PUBLIC_URL + \"/images/005-icon-569518_select.png\"} alt=\"angry\" />\r\n                        </label>\r\n                    </div>\r\n                    <button className=\"mood_next btn\" onClick={handleMoodClick}>NEXT</button>\r\n                </div>\r\n            </Fade>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Mood;","import React from \"react\";\r\nimport Mood from \"../components/Mood\";\r\nimport Footer from \"../components/Footer\";\r\n\r\nconst Ask = (props) => {\r\n\r\n    if (props.location.state === undefined) {\r\n        window.location.replace(\"https://sloth-hub.github.io/whattoeattoday/\"); // state가 존재하지 않으면\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <Mood \r\n            state={props.location.state}\r\n            />\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ask;","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { HashRouter, Route } from 'react-router-dom';\nimport ReactDOM from \"react-dom\";\nimport Home from \"./pages/Home\";\nimport Ask from \"./pages/Ask\";\nimport \"./reset.css\";\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Route path=\"/\" exact={true} component={Home}/>\n      <Route path=\"/ask\" component={Ask}/>\n    </HashRouter>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.Fragment>\n    <App />\n    <Helmet>\n    <script src=\"https://developers.kakao.com/sdk/js/kakao.js\"></script>\n    </Helmet>\n  </React.Fragment>,\n  rootElement\n);\n"],"sourceRoot":""}